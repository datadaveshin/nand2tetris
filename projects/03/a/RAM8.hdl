// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way (in=load, sel=address, a=dmxA, b=dmxB, c=dmxC, d=dmxD, e=dmxE, f=dmxF, g=dmxG, h=dmxH);
    Register (in=in, load=dmxA, out=outReg0);
    Register (in=in, load=dmxB, out=outReg1);
    Register (in=in, load=dmxC, out=outReg2);
    Register (in=in, load=dmxD, out=outReg3);
    Register (in=in, load=dmxE, out=outReg4);
    Register (in=in, load=dmxF, out=outReg5);
    Register (in=in, load=dmxG, out=outReg6);
    Register (in=in, load=dmxH, out=outReg7);
    Mux8Way16 (a=outReg0, b=outReg1, c=outReg2, d=outReg3, e=outReg4, f=outReg5, g=outReg6, h=outReg7, sel=address, out=out);
}
