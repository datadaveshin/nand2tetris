// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    DMux8Way (in=load, sel=address[0..2], a=dmxramA, b=dmxramB, c=dmxramC, d=dmxramD, e=dmxramE, f=dmxramF, g=dmxramG, h=dmxramH);
    RAM8 (in=in, load=dmxramA, address=address[3..5], out=outram0);
    RAM8 (in=in, load=dmxramB, address=address[3..5], out=outram1);
    RAM8 (in=in, load=dmxramC, address=address[3..5], out=outram2);
    RAM8 (in=in, load=dmxramD, address=address[3..5], out=outram3);
    RAM8 (in=in, load=dmxramE, address=address[3..5], out=outram4);
    RAM8 (in=in, load=dmxramF, address=address[3..5], out=outram5);
    RAM8 (in=in, load=dmxramG, address=address[3..5], out=outram6);
    RAM8 (in=in, load=dmxramH, address=address[3..5], out=outram7);
    Mux8Way16 (a=outram0, b=outram1, c=outram2, d=outram3, e=outram4, f=outram5, g=outram6, h=outram7, sel=address[0..2], out=out);
}
